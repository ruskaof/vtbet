version: '3.9'

services:
  postgresql:
    image: postgres:15.2
    restart: always
    environment:
      POSTGRES_DB: vtbet
      POSTGRES_USER: vtbet
      POSTGRES_PASSWORD: vtbet
      PGDATA: /var/lib/postgresql/vtbet/data
    volumes:
      - postgres:/var/lib/pgsql/data
    networks:
      - backend
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "vtbet" ]
      interval: 10s
      timeout: 5s
      retries: 5

  liquibase-migrations:
    image: liquibase/liquibase:4.18
    depends_on:
      postgresql:
        condition: service_healthy
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/vtbet
      - --username=vtbet
      - --password=vtbet
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - backend

  eureka:
    restart: always
    build: ./vtbet-eureka
    ports:
      - "8761:8761"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations

  configs:
    restart: always
    build: ./vtbet-configs
    ports:
      - "8489:8489"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - eureka
    environment:
      EUREKA_URL: http://eureka:8761/eureka

  user-accounter:
    restart: always
    build: ./vtbet-user-accounter
    ports:
      - "8601:8601"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      DB_USERNAME: vtbet
      DB_PASSWORD: vtbet
      DB_URL: r2dbc:postgresql://postgresql:5432/vtbet
      S3_URL: s3:8090

  sports:
    restart: always
    build: ./vtbet-sports
    ports:
      - "8081:8081"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      DB_USERNAME: vtbet
      DB_PASSWORD: vtbet
      DB_URL: jdbc:postgresql://postgresql:5432/vtbet

  bets-handler:
    restart: always
    build: ./vbet-bets-handler
    ports:
      - "8492:8492"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      KAFKA_BOOTSTRAP_SERVERS: PLAINTEXT://broker-1:19092,PLAINTEXT://broker-2:19092,PLAINTEXT://broker-3:19092
      EUREKA_URL: http://eureka:8761/eureka
      SPORTS_URL: http://sports:8081/
      USER_ACCOUNTER_URL: http://user-accounter:8601/
      CONFIG_URL: http://configs:8489/
      DB_USERNAME: vtbet
      DB_PASSWORD: vtbet
      DB_URL: jdbc:postgresql://postgresql:5432/vtbet

  main:
    restart: always
    build: ./vtbet-main
    ports:
      - "8080:8080"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      AUTH_URL: http://auth:8440/
      AUTH_SWAGGER_URL: http://localhost:8440/v3/api-docs
      BETS_HANDLER_URL: http://bets-handler:8492/
      BETS_HANDLER_SWAGGER_URL: http://localhost:8492/v3/api-docs
      SPORTS_URL: http://sports:8081/
      SPORTS_SWAGGER_URL: http://localhost:8081/v3/api-docs
      USER_ACCOUNTER_URL: http://user-accounter:8601/
      USER_ACCOUNTER_SWAGGER_URl: http://localhost:8601/v3/api-docs

  auth:
    restart: always
    build: ./vtbet-auth
    ports:
      - "8440:8440"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      DB_USERNAME: vtbet
      DB_PASSWORD: vtbet
      DB_URL: jdbc:postgresql://postgresql:5432/vtbet

  s3:
    restart: always
    build: ./vtbet-s3
    ports:
      - "8090:8090"
    networks:
      - backend
    depends_on:
      - configs
      - minio
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: vtbets
      MINIO_SECRET_KEY: vtbetsvtbets
      MINIO_BUCKET: passports

  minio:
    restart: always
    networks:
      - backend
    image: minio/minio:latest
    command: server --console-address ":9001" /data/
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: vtbets
      MINIO_ROOT_PASSWORD: vtbetsvtbets
    volumes:
      - minio-storage:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  analytics-server:
    restart: always
    build: ./vtbet-analytics-server
    ports:
      - "8597:8597"
    networks:
      - backend
    depends_on:
      - postgresql
      - liquibase-migrations
      - configs
    environment:
      EUREKA_URL: http://eureka:8761/eureka
      CONFIG_URL: http://configs:8489/
      DB_URL: jdbc:postgresql://postgresql:5432/vtbet

  controller-1:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-1
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-2:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-2
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  controller-3:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: controller-3
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: controller
      KAFKA_LISTENERS: CONTROLLER://:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  broker-1:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-1
    ports:
      - 29092:9092
    environment:
      KAFKA_NODE_ID: 4
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:19092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-2:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-2
    ports:
      - 39092:9092
    environment:
      KAFKA_NODE_ID: 5
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:19092,PLAINTEXT_HOST://localhost:39092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3

  broker-3:
    networks:
      - backend
    image: apache/kafka:latest
    container_name: broker-3
    ports:
      - 49092:9092
    environment:
      KAFKA_NODE_ID: 6
      KAFKA_PROCESS_ROLES: broker
      KAFKA_LISTENERS: 'PLAINTEXT://broker-3:19092,PLAINTEXT_HOST://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:19092,PLAINTEXT_HOST://localhost:49092'
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@controller-1:9093,2@controller-2:9093,3@controller-3:9093
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    depends_on:
      - controller-1
      - controller-2
      - controller-3

volumes:
  postgres:
  pgadmin:
  minio-storage:

networks:
  backend: